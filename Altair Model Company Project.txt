select*from products;
select*from orderdetails;
select*from customers;
select*from payments;
select*from employees;
select*from offices;


General Select code

SELECT DISTINCT column_name, AGG_FUNC(column_or_expression), â€¦
FROM mytable
    JOIN another_table
      ON mytable.column = another_table.column
    WHERE constraint_expression
    GROUP BY column
    HAVING constraint_expression
    ORDER BY column ASC/DESC
    LIMIT count OFFSET COUNT;



// starts here //


Sales topic:

SELECT Month(o.orderdate), p.productLine, sum(od.quantityOrdered) as total_ordered  /*  selects the month, category and total quantity ordered columns */
FROM orderdetails od /* from orderdetails table as main table */
    JOIN products p  /* joining with product table as foreign */
      ON od.productcode = p.productcode /* columns in common between both tables */
	JOIN orders o
      ON od.ordernumber = o.ordernumber
    GROUP BY Month(o.orderdate), p.productLine /* grouping by month and category */
    ORDER BY month(o.orderdate) asc, sum(od.quantityOrdered) DESC; /* ordering the results to show up by each month from higher to lowest in quantity */
    
    /* i think we are missing subquery's throught the project, we now need to tell SQL to compare with previous year */

/* human resources topic */

SELECT monthname(p.paymentdate), concat(e.firstName, ' ', e.lastname) as full_employee_name, sum(p.amount) as turnover
FROM customers c
    JOIN payments p
		ON c.customernumber = p.customernumber
	Join employees e
		ON c.salesRepEmployeeNumber = e.employeeNumber
    GROUP BY monthname(p.paymentdate), c.salesRepEmployeeNumber
    ORDER BY monthname(p.paymentdate) Desc, sum(p.amount) desc
    limit 2;
   
